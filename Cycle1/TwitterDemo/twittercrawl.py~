import sys
import os
import time
import urllib
import threading
import inspect
import ctypes
import twitter
import cassandra
from TwitterGeoPics import Geocoder
import TwitterSearch
import TwitterCrawler
from TwitterThread import TwitterThread
from dbFacade import dbFacade

'''
TODO:
-> Composite score
'''

wordlist = ['Tacos', 'Pizza', 'Burgers', 'Fries']

query = ""
for word in wordlist:
	query += " OR " + word
query = query[4:]

print query

#query = sys.argv[1]

# DATABASE PREPERATION
db = dbFacade()
db.connect()
db.create_keyspace_and_schema()

# LOGIN
crawler = TwitterCrawler.TwitterCrawler()
api = crawler.login()
geocoder = Geocoder.Geocoder()

''' MULTITHREADING '''

# Create Twitter Thread
twitterThread = TwitterThread(crawler, db, query)

# Start Twitter search
twitterThread.start()

# End Twitter search thread with Ctrl+C
while(True):
	try:
		time.sleep(1)
	except KeyboardInterrupt:
		print "Closing threads.."
		twitterThread.raiseExc(KeyboardInterrupt)
		break

while twitterThread.isAlive():
	time.sleep(1)

''' CALCULATE COMPOSITE USER SCORES '''

print "Retrieving from db.."
db.session.row_factory = cassandra.query.dict_factory
users = db.get_users()

print "Scoring.."
for user in users:
	posts = db.get_posts(user['username'])

	for post in posts:
		user['score'] = user['score'] + post['score']


# relative composite score
print "Update user scores in db.."
for user in users:
	db.insert_user_score(user['username'], user['score'], user['website'])

''' SHOW RESULTS '''

print "Retrieving updated scores..\n"
users = db.get_scored_users()
for i in range(0,10):
	print users[i]['username'] + " => " + str(users[i]['score'])


